MANUALE DI RIFERIMENTO
FAMIGLIA WEBGET
data.jtable*


1.  INTRODUZIONE

  1.1  Descrizione
  1.2  Caratteristiche
  1.3  Interfacce
  1.4  Operatività

2.  SPECIFICHE FUNZIONALI

  2.1  Elementi del kit
  2.2  Composizione del contenuto
  2.3  posizionamento

3.  CICLO DI VITA

  3.1 Fasi base del ciclo di vita
  3.2 Fasi iterate per il riempimento statico dell'area dati
  3.3 Fasi iterate per il riempimento dinamico dell'area dati
  
4.  SPECIFICHE TECNICHE
  
  4.1  Proprietà
  4.2  Metodi
  4.3  Eventi

GLOSSARY ................................................................... 79

REFERENCES ................................................................. 85


                            1.  INTRODUZIONE
                            
jtable sta per JavascriptTable. Viene utilizzato per presentare dati dinamici
ottenuti da sorgenti dati. Questo documento ne descrive il funzionamento e come
utilizzarlo all'interno delle viste.


1.1 Descrizione

  jtable,jtablecell sono una serie di webgets correlati che soddisfano
  l'esigenza di presentare informazioni strutturate in forma tabellare e
  ottenute dinamicamente da sorgenti dati, principalemente asincrone.


1.2 Funzionalità utente (front-end)

  Il kit di webget consente di presentare dati tabellari in diverse modalità
  in base ad una serie di parametri impostabili. Lo schema di organizzazione
  predefinito dell'area dati prevede che essa venga riempita di un numero di
  celle quanti sono i record ottenuti dalla sorgente dati. Quando l'area dati
  viene riempita è previsto che si possa scorrere il contenuto per visualizzare
  le restanti celle.
  
  Le celle sono organizzate in righe e colonne, con 2 tipi di orientamento :
  in righe dall'altro al basso o in colonne da sinista verso destra.
  
  Le righe hanno una altezza fissa definibile.
  
  Le celle possono avere una larghezza variabile oppure larghezza fissa. Nel
  caso della larghezza variabile lo spazio disponibile nella riga viene
  suddiviso in parti un numero definibile di parti uguali.
  
  Nel caso della larghezza fissa valgono le seguenti possibilità :
  
  - Numero di celle per riga non definito - quando lo spazio sulla riga viene
    esaurito la cella va a capo spostando tutto il contenuto di conseguenza.
    
  - Numero di celle per riga definito - il numero di celle per riga è fissato
    quando lo spazio occupato dalla riga eccede lo spazio dati è necessario
    scorrere il contenuto per vedere il resto della riga  
  
  È possibile abilitare il caricamento dinamico dei dati, man mano che il
  contenuto diventa visibile nell'area dati, gazie ad una opportuna interazione
  con la sorgente dati.

     
1.3 Interfacce

  jtable si interfaccia da una parte ottenendo dati strutturati in un array e
  dall'altro lato replicando il contenuto di jtablecell tante volte quante sono
  il numero di 'records' nella sorgente dati. Ad ogni ciclo, jtable aggiorna il
  contenuto dell'array interno 'current_record' definito come proprietà di se
  stesso. Il contenuto di jtablecell, ogni volta che viene ridisegnato si occupa
  di prelevare da 'current_record' i campi associati secondo il meccanismo
  standardizzato di 'formattazione di campo' definito in un altro documento.     


1.4 Operatività

  Come indicato sopra lo scopo principale del kit jtable* si occupa di
  presentare dati tabellari all'interno delle viste. Per svolgere questo lavoro
  saranno necessari i seguenti strumenti forniti da G-Framework :

  - Motore di costruzione delle viste
  - Ambiente standard G-Framework lato client
  - Chiamate AjaxRPC (non stretatmente necessario)
  - Meccanismo di formattazione di campo

  Gli strumenti definiti sopra sono descritti accuratamente in altri documenti.



                      2.  SPECIFICHE FUNZIONALI

2.1 Elementi costituenti

  webget 'jtable' :

    webget principale disegna l'intestazione e ne controlla l'ampiezza, disegna
    le celle secondo la regola di composizione data (righe x colonne) e il
    numero di record.
    
  webget 'jtablecell' :

    webget contenitore che viene disegnato tante volte quanti sono i record
    della sorgente dati. Ad ogni ciclo viene anche eseguito il fush in cascata
    dei webget figlo.

  Codice client e fogli di stile :
  
    Entrambi i webget possiedono codice client, jtable ha associato un foglio
    di stile che interessa anche jtablecell.
  
    
2.2 Composizione del contenuto

  Per consentire una grande flessibilità sono disponibili diverse proprietà
  che combinate opportunamente forniscono diversi schemi di composizione per
  il contenuto. Di seguito vengono descritte le proprietà che agiscono sulla
  composizione del contenuto e il comportamento quando vengono combinate fra di 
  loro.

  flusso :

    Definisce il flusso di riempimento dei record. Il flusso predefinito è
    verticale, questo comporta che lo spazio dati viene riempito con celle
    disposte a righe disegnate da sinistra verso destra e dall'alto in basso.
    Impostando il flusso in orizzontale lo spazio dati viene riempito di celle
    disposte a colonne che partono dall'alto verso il basso e impacchettate da
    sinistra vero desta. Nel caso di flusso orizzontale le proprietà sono
    definite considerando le colonne come se fossero righe. 

  dimensione cella :

    Se NON impostato le celle riempiono la riga con dimensione proporzionale
    variando la larghezza. Nel caso di flusso orizzontale variano l'altezza.
    Se il parametro viene impostato il valore indica una dimensione in pixel,
    le celle a questo punto avranno dimensione fissa nella riga.
    Questo parametro è strettamente collegato al numero di celle per riga. 
      
  celle per riga :

    Numero di celle per ogni riga.
    
    Se NON impostato il comportamento predefinito dipende dal dimensionamento
    delle celle :
    
      Se la dimensione cella non è impostato si considera che il contenuto è
      proporzionale e quindi il valore predefinito è 1 con la cella che riempie
      tutta la riga.
      
      Se la dimensione della cella è impostato le celle per ogni riga dipendono
      dalla larghezza dell'area dati, quando la cella va al di fuori dello
      spazio, questa passa alla riga successiva spostando tutto il contenuto
      in basso.

    Se il valore è impostato il comportamento predefinito dipende dal
    dimensionamento delle celle :     
    
      Se la dimensione cella non è impostata si considera che il contenuto è
      proporzionale e quindi la riga viene suddivisa in parti uguali.
      
      Se la dimensione della cella è impostato, le celle per ogni riga vengono
      forzate in base al valore specificato e l'eccedenza comporta che si debba
      scorrere il contenuto per vedere il resto della riga.
    
  caricamento progressivo o dinamico :
  
    Se impostato, è necessario definire una sorgente dati in grado di 
    frazionare il contenuto in quanto ad ogni azione di scorrimento, viene
    generato un evento di richiesta di un range di dati che verrano aggiunti
    all'array interno.
    
    Il caricamento progressivo prevede che i dati vengano aggiunti di volta in
    volta in coda alla tabella aumentando progressivamente lo spazio occupato
    dall'area dati.
    
    Il caricamento dinamico prevede che l'area dati venga predimensionata in
    base al numero di record previsti dalla sorgente, ma vengano solo caricati
    e visualizzati i records nella zona attualmente visualizzata. 
        
    
2.3 Posizionamento

  Il posizionamento segue le seguenti regole :

    Con boxing predefinito o presonalizzato il contenuto è delimitato dal
    webget stesso e l'overflow è gestito con scorrimento.

    Con il boxing impostato a 'false' il contenuto non è delimitato e spetta
    al webget partent gestire l'overflow.

    
                            3.  CICLO DI VITA

Da quando viene letto il codice all'interno della vista, jtable e jtablecell
attraversano varie fasi dette ciclo di vita del webget. Nel seguente capitolo
verranno trattati entrambi i cicli di vita dei due webget in quanto strettamente
correlati fra loro. Non verrà trattato dettagliatament il ciclo di vita completo
dei webjet in quanto comune a tutti gli altri webgets e già trattato in un 
altro documento.


3.1 Fasi base del ciclo di vita

  jtable attraversa le seguenti fasi nel suo ciclo di vita :

  Fasi comuni lato server :
  Fasi comuni lato client :
      
    vedere documenti esterni

  Dispaccio dell'evento 'ready' :
  
    eseguito solo una volta quando il webget è stato correttamente disegnato ed
    agganciato dall'ambiente standard G-Framework sul client.
    
  Dispaccio dell'evento 'dataRequired' :
  
    Eseguito una volta se il caricamento dinamico non è attivo.
    Eseguito ogni volta che si scorre il contenuto e si rende necessario
    caricare nuovi dati. In tal caso la variabile 'this.NewlyExposedRecords'
    contiene il range di dati richiesti. 
     
  Ricezione della chiamata al metodo 'fillData' :
  
    Il metodo accetta come parametro un array contenente tuple numerate ed 
    eventualmente il parametro 'maxlength' contente la dimensione teorica del
    risultato nel caso venga scelto il riempimento dinamico. L'array può essere
    numerato e questo ne determina il posizionamento specifico all'interno del
    buffer di tabella quando il caricamento progressivo è abilitato.
    Se invece è impostato il caricamento statico, gli indici dell'array vengono
    ignorati, e il buffer di tabella viene completamente rimpiazzato.
    
    Questo metodo lancia l'esecuzione iterata per ogni record di diverse fasi
    a seconda che il caricamento sia impostato come statico o progressivo.
    (Paragrafo  3.2)

  Attesa di eventi modificatori .
  

3.2 Fasi iterate per il riempimento statico dell'area dati

  Il caricamento statico prevede vengano caricati tutti i records dalla sorgente
  dati e resi visibili nell'area dati. Le fasi sono le seguenti :
  
  Pulizia area dati :
  
    Vengono eliminate tutte le celle eventualmente create dinamicamente in una
    richiesta precedente.
    
  Stile di Composizione del contenuto :
  
    Viene avviata la corretta iterazione in base allo stile di composizione
    del contenuto derivata dalle proprietà scelte.
    
  Clonazione della cella modello (jtablecell) :
  
    Per ogni iterazione viene clonato l'elemento HTML che costituisce la cella
    modello, viene aggiunta all'area dati e viene eseguito il loop di
    registrazione dei webgets figlio.


3.3 Fasi iterate per il riempimento dinamico dell'area dati

  Il caricmento dinamico prevede che vengano caricati tanti dati quanti ne
  servono a riempire 2 volte la parte visibile dell'area dati e gli altri di
  volta in volta che, scorrendo il contenuti, si raggiunge la fine.
  
  Stile di Composizione del contenuto :
  
    Viene avviata la corretta iterazione in base allo stile di composizione
    del contenuto derivata dalle proprietà scelte.    
  
  Clonazione della cella modello (jtablecell) :
  
    Per ogni iterazione viene clonato l'elemento HTML che costituisce la cella
    modello, viene aggiunta all'area dati e viene eseguito il loop di
    registrazione dei webgets figlio.    


                         4.  SPECIFICHE TECNICHE

4.1 Proprietà

  {filling} (s|p|d)           Riempimento (s)tatico,(p)rogressivo o (d)inamico. 
  {flow} (v|h)                Flusso di riempimento (v)erticale o (h)orizzontale.
  {cellSize} (number)         Dimensione della cella in pixel   
  {cellsByRow} (number)       Numero di celle per riga  
  {incremental} (true|false)  Attiva il caricmento progressivo
  {rowHeight} (number)        Altezza della riga in pixel
  {recordset} (array)         Contiene i dati attualmente caricati. Gli indici
                              dell'array indicano la posizione del record.
  {currentRecord} (number)    Contiene l'indice del record corrente durante
                              l'iterazione
  {selectedRecord} (number)   Contiene l'indice del record corrente quando un
                              area di cella viene cliccata.
  {visibleRecords} (number)   Numero di records visibili nell'area dati. Viene
                              modificato in seguito al ridimensionamento
                              dell'area dati.
                              
4.2 Metodi

  .populate(array)
  
    Lancia il riempimento dell'area dati. Se il tipo di riempimento è statico
    tutti i dati vengono sostituiti con quelli passati, se il riempimento è
    progressivo gli indici dell'array vengono usati per determinare la posizione
    all'interno del buffer di tabella.
    
4.3 Eventi

  .ready(e)
  
    Eseguito al completamento della costruzione e registrazione del webget

  .getdata(e)
  
    Eseguito quando sono richiesti dati. L'oggetto 'event' passato può contenere
    due parametri target.req_data_from e target.req_data_to

  .onclick(e)
  
    Eseguito su click. Viene specificato inquanto dopo il click il valore
    sel_record viene modificato in base alla cella sotto il puntatore al momento
    del click.
    
POST

Accedere ai webget contenuti nelle celle generate

- prevedere nell'oggetto dataArea la possibilità di ottenere gli elementi in
  base all'ID contenuti allo specifico record.

  es. myTable.dataArea[n].getElementById('myImage');
  
- prevedere di poter ottenere una collezione di webget di ID specificato
  contenuti all'interno dell'area dati
  
  es. myTable.dataArea.getCollection('myImage');
